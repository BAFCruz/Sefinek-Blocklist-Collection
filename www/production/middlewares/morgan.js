const morgan=require("morgan"),format="production"===process.env.NODE_ENV?'[:status :method :response-time ms] :url "HTTP/:http-version" :user-agent ":referrer" :body':"dev",userAgentsToSkip=["Better Uptime Bot Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36"],userAgents=[...userAgentsToSkip,"Googlebot/2.1 (+http://www.google.com/bot.html)","Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","Mozilla/5.0 (Linux; Android 6.0.1; Nexus 5X Build/MMB29P) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.6045.159 Mobile Safari/537.36 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko; compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm) Chrome/116.0.1938.76 Safari/537.36","DuckDuckGo/1.60.1 CFNetwork/1410.0.3 Darwin/22.6.0","Mozilla/5.0 (compatible; DuckDuckGo-Favicons-Bot/1.0; +http://duckduckgo.com)","Mozilla/5.0 (compatible; YandexBot/3.0; +http://yandex.com/bots)","Mozilla/5.0 (compatible; Y!J-WSC/1.0; +https://yahoo.jp/3BSZgF)","Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)","Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko); compatible; ChatGPT-User/1.0; +https://openai.com/bot","IAS Crawler (ias_crawler; http://integralads.com/site-indexing-policy/)","Mozilla/5.0 (compatible; AhrefsBot/7.0; +http://ahrefs.com/robot/)","Mozilla/5.0 (compatible; GrapeshotCrawler/2.0; +http://www.grapeshot.co.uk/crawler.php)","Mozilla/5.0 (compatible; proximic; +https://www.comscore.com/Web-Crawler)","Mozilla/5.0 (compatible; TTD-Content; +https://www.thetradedesk.com/general/ttd-content)","Mozilla/5.0 (Linux; Android 7.0;) AppleWebKit/537.36 (KHTML, like Gecko) Mobile Safari/537.36 (compatible; PetalBot;+https://webmaster.petalsearch.com/site/petalbot)"],skipUserAgent=()=>e=>{const o=e.headers["user-agent"];return userAgentsToSkip.includes(o)},normalizeBody=({body:e})=>e&&"object"==typeof e&&Object.keys(e).length?JSON.stringify(e):null;morgan.token("body",normalizeBody),module.exports={use:morgan(format,{skip:e=>{const o=e.headers["user-agent"];return userAgentsToSkip.includes(o)}}),userAgents:userAgents};